{"version":3,"sources":["src/index.js"],"names":["timeEl","document","getElementById","dateEl","items","querySelector","location","API_KEY","placeOf","weathername","days","months","getTime","milli","time","Date","hour","getHours","hourFormat","minutes","getMinutes","weatherData","data","name","main","temp","tempformat","Math","round","humidity","sys","visibility","sunrise","sunset","speed","wind","weather","BgImg","body","style","backgroundImage","innerHTML","api","place","value","fetch","then","res","json","setInterval","day","getDay","date","getDate","month","getMonth","minuteformat","ampm","addEventListener","event","preventDefault","keyCode"],"mappings":";AAAA,IAAMA,EAASC,SAASC,eAAe,QACjCC,EAASF,SAASC,eAAe,QACjCE,EAAQH,SAASI,cAAc,gBAC/BC,EAAWL,SAASC,eAAe,SACnCK,EAAU,mCACVC,EAAUP,SAASC,eAAe,YAClCO,EAAcR,SAASC,eAAe,eAEtCQ,EAAO,CACX,SACA,SACA,UACA,YACA,WACA,SACA,YAEIC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAqBF,SAASC,EAAQC,GACTC,IAAAA,EAAO,IAAIC,KAAKF,GAChBG,EAAOF,EAAKG,WACZC,EAAaF,GAAQ,GAAKA,EAAO,GAAKA,EACtCG,EAAUL,EAAKM,aAGdF,OAAAA,EAAa,KAFCC,EAAU,GAASA,IAAAA,OAAAA,GAAYA,GAEX,KAD5BH,GAAQ,GAAK,KAAO,MAgBnC,SAASK,EAAYC,GACbC,IAAAA,EAAOD,EAAKC,KACZC,EAAOF,EAAKE,KACZC,EAAOD,EAAKC,KACZC,EAAaC,KAAKC,MAAMH,GACxBI,EAAWL,EAAKK,SAChBC,EAAMR,EAAKQ,IACXC,EAAaT,EAAKS,WAClBC,EAAUF,EAAIE,QACdC,EAASH,EAAIG,OAEbC,EADOZ,EAAKa,KACCD,MACbE,EAAUd,EAAKc,QAAQ,GAAGZ,KAMvBa,SAAAA,EAAMD,GACLA,OAAAA,GACD,IAAA,QACHnC,SAASqC,KAAKC,MAAMC,gBAApB,mFAEA,MACG,IAAA,SACHvC,SAASqC,KAAKC,MAAMC,gBAApB,uKACA,MACG,IAAA,OACHvC,SAASqC,KAAKC,MAAMC,gBAApB,uKACA,MACG,IAAA,OACHvC,SAASqC,KAAKC,MAAMC,gBAApB,qKACA,MACG,IAAA,UACHvC,SAASqC,KAAKC,MAAMC,gBAApB,oFACA,MACG,IAAA,OACHvC,SAASqC,KAAKC,MAAMC,gBAApB,wKACA,MACG,IAAA,eACHvC,SAASqC,KAAKC,MAAMC,gBAApB,wKACA,MACG,IAAA,OAGA,IAAA,QACHvC,SAASqC,KAAKC,MAAMC,gBAApB,qKACA,MACG,IAAA,OACHvC,SAASqC,KAAKC,MAAMC,gBAApB,wKACA,MACG,IAAA,UACHvC,SAASqC,KAAKC,MAAMC,gBAApB,iFACA,MACF,QACEvC,SAASqC,KAAKC,MAAMC,gBAApB,wKAvCNH,EAAMD,GA4CNnC,SAASqC,KAAKC,MAAMC,gBAA0BH,QAAAA,OAAAA,EAAMD,GAApD,MACA9B,EAASmC,UAAkCf,sBAAAA,OAAAA,EACtBH,iDAAAA,OAAAA,EADrB,mBAGAd,EAAYgC,UAAqCL,yBAAAA,OAAAA,EAAjD,UACAhC,EAAMqC,UAKAZ,sHAAAA,OAAAA,EAOAK,2IAAAA,OAAAA,EAOAH,6IAAAA,OAAAA,EAOCnB,2IAAAA,OAAAA,EAAkB,IAAVoB,GAOTpB,qIAAAA,OAAAA,EAAiB,IAATqB,GAjCd,mBAuCF,SAASS,IACDC,IAAAA,EAAQ1C,SAASC,eAAe,YAAY0C,MAClDC,MACuDF,qDAAAA,OAAAA,EAA4BpC,wBAAAA,OAAAA,IAEhFuC,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACxB,GACLD,EAAYC,KArJlB2B,YAAY,WACJnC,IAAAA,EAAO,IAAIC,KACXmC,EAAMpC,EAAKqC,SACXC,EAAOtC,EAAKuC,UACZC,EAAQxC,EAAKyC,WACbvC,EAAOF,EAAKG,WACZC,EAAaF,GAAQ,GAAKA,EAAO,GAAKA,EACtCG,EAAUL,EAAKM,aACfoC,EAAerC,EAAU,GAASA,IAAAA,OAAAA,GAAYA,EAC9CsC,EAAOzC,GAAQ,GAAK,KAAO,KAEjChB,EAAOyC,UACLvB,EAAa,IAAMsC,EAAe,IAAyBC,mBAAAA,OAAAA,EAD7D,WAEAtD,EAAOsC,UAAY/B,EAAKwC,GAAO,IAAME,EAAO,IAAMzC,EAAO2C,IACxD,KAcHT,MACkFtC,gFAAAA,OAAAA,IAE/EuC,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACxB,GACLD,EAAYC,KA0HhBd,EAAQkD,iBAAiB,QAAS,SAAUC,GAC1CA,EAAMC,iBACgB,KAAlBD,EAAME,SACRnB,MAIJzC,SAASC,eAAe,OAAOwD,iBAAiB,QAAS,SAAUC,GACjEjB","file":"src.2a7e67fa.js","sourceRoot":"..","sourcesContent":["const timeEl = document.getElementById(\"time\");\nconst dateEl = document.getElementById(\"date\");\nconst items = document.querySelector(\".weatherInfo\");\nconst location = document.getElementById(\"place\");\nconst API_KEY = \"6ddc5032fdb5ba8e02c25732c09de89c\";\nconst placeOf = document.getElementById(\"idSearch\");\nconst weathername = document.getElementById(\"weatherName\");\n\nconst days = [\n  \"Sunday\",\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\"\n];\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\n//get time\n\nsetInterval(() => {\n  const time = new Date();\n  const day = time.getDay();\n  const date = time.getDate();\n  const month = time.getMonth();\n  const hour = time.getHours();\n  const hourFormat = hour >= 13 ? hour % 12 : hour;\n  const minutes = time.getMinutes();\n  const minuteformat = minutes < 10 ? `0${minutes}` : minutes;\n  const ampm = hour >= 12 ? \"PM\" : \"AM\";\n\n  timeEl.innerHTML =\n    hourFormat + \":\" + minuteformat + \" \" + `<span id=\"ampm\">${ampm}</span>`;\n  dateEl.innerHTML = days[day] + \",\" + date + \" \" + months[month];\n}, 1000);\n\nfunction getTime(milli) {\n  const time = new Date(milli);\n  const hour = time.getHours();\n  const hourFormat = hour >= 13 ? hour % 12 : hour;\n  const minutes = time.getMinutes();\n  const minuteformat = minutes < 10 ? `0${minutes}` : minutes;\n  const ampm = hour >= 12 ? \"PM\" : \"AM\";\n  return hourFormat + \":\" + minuteformat + \" \" + ampm;\n}\n\n//default city\n\nfetch(\n  `https://api.openweathermap.org/data/2.5/weather?q=Bhavani&units=metric&appid=${API_KEY}`\n)\n  .then((res) => res.json())\n  .then((data) => {\n    weatherData(data);\n  });\n\n//for getting api values\n\nfunction weatherData(data) {\n  const name = data.name;\n  const main = data.main;\n  const temp = main.temp;\n  const tempformat = Math.round(temp);\n  const humidity = main.humidity;\n  const sys = data.sys;\n  const visibility = data.visibility;\n  const sunrise = sys.sunrise;\n  const sunset = sys.sunset;\n  const wind = data.wind;\n  const speed = wind.speed;\n  const weather = data.weather[0].main;\n\n  //FUNCTION TO GET BACKGROUND IMG\n\n  BgImg(weather);\n\n  function BgImg(weather) {\n    switch (weather) {\n      case \"Clear\":\n        document.body.style.backgroundImage = `url(\"https://cdn.pixabay.com/photo/2020/08/03/12/19/flower-5459972_960_720.jpg\")`;\n\n        break;\n      case \"Clouds\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1504608524841-42fe6f032b4b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=765&q=80\")`;\n        break;\n      case \"Rain\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1534274988757-a28bf1a57c17?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=735&q=80\")`;\n        break;\n      case \"Snow\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1542601098-8fc114e148e2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Drizzle\":\n        document.body.style.backgroundImage = `url(\"https://cdn.pixabay.com/photo/2020/05/03/13/41/drizzle-5125091_960_720.jpg\")`;\n        break;\n      case \"Haze\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1488342021833-581baa86e81b?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Thunderstorm\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1597907412477-dad8c83d3e86?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Mist\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1560146560-1fce47962590?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Smoke\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1560146560-1fce47962590?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Dust\":\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1593076436092-6f54229aca1c?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1170&q=80\")`;\n        break;\n      case \"Tornado\":\n        document.body.style.backgroundImage = `url(\"https://cdn.pixabay.com/photo/2017/08/01/20/06/city-2567670_960_720.jpg\")`;\n        break;\n      default:\n        document.body.style.backgroundImage = `url(\"https://images.unsplash.com/photo-1518022525094-218670c9b745?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=687&q=80\")`;\n    }\n  }\n\n  //working with innerHTML\n  document.body.style.backgroundImage = `\"url(${BgImg(weather)})\"`;\n  location.innerHTML = ` <div class=\"temp\">${tempformat}Â°<span>C</span>,</div>\n  <span class=\"city\">${name}</span>\n</div>`;\n  weathername.innerHTML = ` <div class=\"weather\">${weather}</div>`;\n  items.innerHTML = `<div class=\"weatherItems\">\n<div class=\"humidity\">\n  Humidity\n</div>\n<img src=\"../pics/water.png\"></img>\n<span>${humidity}%<span>\n</div>\n<div class=\"weatherItems\">\n<div class=\"windspeed\">\n  Wind Speed\n</div>\n<img src=\"../pics/storm.png\"></img>\n<span>${speed}m/s</span>\n</div>\n<div class=\"weatherItems\">\n<div class=\"visibility\">\n  Visibility\n</div>\n<img src=\"../pics/eye.png\"></img>\n<span>${visibility} m</span>\n</div>\n<div class=\"weatherItems\">\n<div class=\"sunrise\">\n  Sunrise\n</div>\n<img src=\"../pics/sunrise.png\"></img>\n<span> ${getTime(sunrise * 1000)}</span>\n</div>\n<div class=\"weatherItems\">\n<div class=\"sunset\">\n  Sunset\n</div>\n<img src=\"../pics/sunset.png\"></img>\n<span>${getTime(sunset * 1000)}</span>\n</div>`;\n}\n\n//fwtching api for searching a place\n\nfunction api() {\n  const place = document.getElementById(\"idSearch\").value;\n  fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${place}&units=metric&appid=${API_KEY}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      weatherData(data);\n    });\n}\n\n//click,enter serch bar\n\nplaceOf.addEventListener(\"keyup\", function (event) {\n  event.preventDefault();\n  if (event.keyCode === 13) {\n    api();\n  }\n});\n\ndocument.getElementById(\"btn\").addEventListener(\"click\", function (event) {\n  api();\n});\n"]}